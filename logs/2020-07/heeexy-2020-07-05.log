2020-07-05 23:25:09.961 INFO  --- [SpringApplication.java:651][restartedMain] - No active profile set, falling back to default profiles: default
2020-07-05 23:25:18.134 WARN  --- [URLConfigurationSource.java:121][restartedMain] - No URLs will be polled as dynamic configuration sources.
2020-07-05 23:25:18.135 INFO  --- [URLConfigurationSource.java:122][restartedMain] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-05 23:25:18.141 WARN  --- [URLConfigurationSource.java:121][restartedMain] - No URLs will be polled as dynamic configuration sources.
2020-07-05 23:25:18.141 INFO  --- [URLConfigurationSource.java:122][restartedMain] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-05 23:25:23.787 INFO  --- [DiscoveryClient.java:365][restartedMain] - Initializing Eureka in region us-east-1
2020-07-05 23:25:24.218 INFO  --- [DiscoveryJerseyProvider.java:70][restartedMain] - Using JSON encoding codec LegacyJacksonJson
2020-07-05 23:25:24.219 INFO  --- [DiscoveryJerseyProvider.java:71][restartedMain] - Using JSON decoding codec LegacyJacksonJson
2020-07-05 23:25:24.546 INFO  --- [DiscoveryJerseyProvider.java:80][restartedMain] - Using XML encoding codec XStreamXml
2020-07-05 23:25:24.547 INFO  --- [DiscoveryJerseyProvider.java:81][restartedMain] - Using XML decoding codec XStreamXml
2020-07-05 23:25:25.300 INFO  --- [ConfigClusterResolver.java:43][restartedMain] - Resolving eureka endpoints via configuration
2020-07-05 23:25:25.692 INFO  --- [DiscoveryClient.java:976][restartedMain] - Disable delta property : false
2020-07-05 23:25:25.692 INFO  --- [DiscoveryClient.java:977][restartedMain] - Single vip registry refresh property : null
2020-07-05 23:25:25.693 INFO  --- [DiscoveryClient.java:978][restartedMain] - Force full registry fetch : false
2020-07-05 23:25:25.693 INFO  --- [DiscoveryClient.java:979][restartedMain] - Application is null : false
2020-07-05 23:25:25.694 INFO  --- [DiscoveryClient.java:980][restartedMain] - Registered Applications size is zero : true
2020-07-05 23:25:25.694 INFO  --- [DiscoveryClient.java:982][restartedMain] - Application version is -1: true
2020-07-05 23:25:25.694 INFO  --- [DiscoveryClient.java:1065][restartedMain] - Getting all instance registry info from the eureka server
2020-07-05 23:25:27.816 ERROR --- [RedirectingEurekaHttpClient.java:83][restartedMain] - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplications(AbstractJerseyEurekaHttpClient.java:165)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1069)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:983)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:430)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:276)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:272)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:67)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:330)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$fa3aa779.CGLIB$eurekaClient$0(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$fa3aa779$$FastClassBySpringCGLIB$$561caba3.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$fa3aa779.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:651)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:636)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1338)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:359)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:186)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:356)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:129)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:282)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:499)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration$$EnhancerBySpringCGLIB$$cff42f6e.getEurekaClient(<generated>)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:57)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:38)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:83)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:182)
	at org.springframework.context.support.DefaultLifecycleProcessor.access$200(DefaultLifecycleProcessor.java:53)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:360)
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:158)
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:122)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:894)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.julong.oasystem.OasystemApplication.main(OasystemApplication.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 85 common frames omitted
2020-07-05 23:25:27.817 WARN  --- [RetryableEurekaHttpClient.java:130][restartedMain] - Request execution failed with message: java.net.ConnectException: Connection refused: connect
2020-07-05 23:25:27.819 ERROR --- [DiscoveryClient.java:990][restartedMain] - DiscoveryClient_HOUTAIGUANLI/192.168.0.102:houtaiguanli:9090 - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1069)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:983)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:430)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:276)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:272)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:67)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:330)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$fa3aa779.CGLIB$eurekaClient$0(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$fa3aa779$$FastClassBySpringCGLIB$$561caba3.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$fa3aa779.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:651)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:636)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1338)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:359)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:186)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:356)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:129)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:282)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:499)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration$$EnhancerBySpringCGLIB$$cff42f6e.getEurekaClient(<generated>)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:57)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:38)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:83)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:182)
	at org.springframework.context.support.DefaultLifecycleProcessor.access$200(DefaultLifecycleProcessor.java:53)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:360)
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:158)
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:122)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:894)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.julong.oasystem.OasystemApplication.main(OasystemApplication.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
2020-07-05 23:25:27.823 WARN  --- [DiscoveryClient.java:297][restartedMain] - Using default backup registry implementation which does not do anything.
2020-07-05 23:25:27.828 INFO  --- [DiscoveryClient.java:1288][restartedMain] - Starting heartbeat executor: renew interval is: 30
2020-07-05 23:25:27.831 INFO  --- [InstanceInfoReplicator.java:60][restartedMain] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-07-05 23:25:27.837 INFO  --- [DiscoveryClient.java:465][restartedMain] - Discovery Client initialized at timestamp 1593962727834 with initial instances count: 0
2020-07-05 23:25:27.848 INFO  --- [DiscoveryClient.java:1323][restartedMain] - Saw local status change event StatusChangeEvent [timestamp=1593962727848, current=UP, previous=STARTING]
2020-07-05 23:25:27.857 INFO  --- [DiscoveryClient.java:844][DiscoveryClient-InstanceInfoReplicator-0] - DiscoveryClient_HOUTAIGUANLI/192.168.0.102:houtaiguanli:9090: registering service...
2020-07-05 23:25:27.942 INFO  --- [HikariDataSource.java:110][restartedMain] - HikariPool-1 - Starting...
2020-07-05 23:25:27.945 WARN  --- [DriverDataSource.java:70][restartedMain] - Registered driver with driverClassName=oracle.jdbc.driver.OracleDriver was not found, trying direct instantiation.
2020-07-05 23:25:28.458 INFO  --- [HikariDataSource.java:123][restartedMain] - HikariPool-1 - Start completed.
2020-07-05 23:25:28.882 WARN  --- [DiscoveryClient.java:1321][restartedMain] - Saw local status change event StatusChangeEvent [timestamp=1593962728882, current=DOWN, previous=UP]
2020-07-05 23:25:28.940 WARN  --- [URLConfigurationSource.java:121][restartedMain] - No URLs will be polled as dynamic configuration sources.
2020-07-05 23:25:28.941 INFO  --- [URLConfigurationSource.java:122][restartedMain] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-05 23:25:28.959 INFO  --- [DiscoveryClient.java:906][restartedMain] - Shutting down DiscoveryClient ...
2020-07-05 23:25:30.049 ERROR --- [RedirectingEurekaHttpClient.java:83][DiscoveryClient-InstanceInfoReplicator-0] - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:847)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 common frames omitted
2020-07-05 23:25:30.050 WARN  --- [RetryableEurekaHttpClient.java:130][DiscoveryClient-InstanceInfoReplicator-0] - Request execution failed with message: java.net.ConnectException: Connection refused: connect
2020-07-05 23:25:30.050 WARN  --- [DiscoveryClient.java:849][DiscoveryClient-InstanceInfoReplicator-0] - DiscoveryClient_HOUTAIGUANLI/192.168.0.102:houtaiguanli:9090 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:847)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-07-05 23:25:30.051 WARN  --- [InstanceInfoReplicator.java:125][DiscoveryClient-InstanceInfoReplicator-0] - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:847)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-07-05 23:25:30.051 INFO  --- [DiscoveryClient.java:844][DiscoveryClient-InstanceInfoReplicator-0] - DiscoveryClient_HOUTAIGUANLI/192.168.0.102:houtaiguanli:9090: registering service...
2020-07-05 23:25:31.962 INFO  --- [DiscoveryClient.java:940][restartedMain] - Unregistering ...
2020-07-05 23:25:32.047 ERROR --- [RedirectingEurekaHttpClient.java:83][DiscoveryClient-InstanceInfoReplicator-0] - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:847)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 common frames omitted
2020-07-05 23:25:32.048 WARN  --- [RetryableEurekaHttpClient.java:130][DiscoveryClient-InstanceInfoReplicator-0] - Request execution failed with message: java.net.ConnectException: Connection refused: connect
2020-07-05 23:25:32.048 WARN  --- [DiscoveryClient.java:849][DiscoveryClient-InstanceInfoReplicator-0] - DiscoveryClient_HOUTAIGUANLI/192.168.0.102:houtaiguanli:9090 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:847)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-07-05 23:25:32.049 WARN  --- [InstanceInfoReplicator.java:125][DiscoveryClient-InstanceInfoReplicator-0] - There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:847)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-07-05 23:25:33.969 ERROR --- [RedirectingEurekaHttpClient.java:83][restartedMain] - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.delete(WebResource.java:591)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.cancel(AbstractJerseyEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:941)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:919)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:242)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:235)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:403)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:142)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:579)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:551)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1091)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:512)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1084)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:978)
	at org.springframework.boot.builder.ParentContextCloserApplicationListener$ContextCloserListener.onApplicationEvent(ParentContextCloserApplicationListener.java:94)
	at org.springframework.boot.builder.ParentContextCloserApplicationListener$ContextCloserListener.onApplicationEvent(ParentContextCloserApplicationListener.java:82)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:403)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:360)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1012)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:978)
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener$CloseContextOnFailureApplicationListener.onApplicationEvent(BootstrapApplicationListener.java:498)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:403)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:360)
	at org.springframework.boot.context.event.EventPublishingRunListener.failed(EventPublishingRunListener.java:112)
	at org.springframework.boot.SpringApplicationRunListeners.callFailedListener(SpringApplicationRunListeners.java:90)
	at org.springframework.boot.SpringApplicationRunListeners.failed(SpringApplicationRunListeners.java:83)
	at org.springframework.boot.SpringApplication.handleRunFailure(SpringApplication.java:797)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:325)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.julong.oasystem.OasystemApplication.main(OasystemApplication.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 70 common frames omitted
2020-07-05 23:25:33.971 WARN  --- [RetryableEurekaHttpClient.java:130][restartedMain] - Request execution failed with message: java.net.ConnectException: Connection refused: connect
2020-07-05 23:25:33.972 ERROR --- [DiscoveryClient.java:944][restartedMain] - DiscoveryClient_HOUTAIGUANLI/192.168.0.102:houtaiguanli:9090 - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:941)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:919)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:242)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:235)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:403)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:142)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:258)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:579)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:551)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1091)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:512)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1084)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:978)
	at org.springframework.boot.builder.ParentContextCloserApplicationListener$ContextCloserListener.onApplicationEvent(ParentContextCloserApplicationListener.java:94)
	at org.springframework.boot.builder.ParentContextCloserApplicationListener$ContextCloserListener.onApplicationEvent(ParentContextCloserApplicationListener.java:82)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:403)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:360)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1012)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:978)
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener$CloseContextOnFailureApplicationListener.onApplicationEvent(BootstrapApplicationListener.java:498)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:403)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:360)
	at org.springframework.boot.context.event.EventPublishingRunListener.failed(EventPublishingRunListener.java:112)
	at org.springframework.boot.SpringApplicationRunListeners.callFailedListener(SpringApplicationRunListeners.java:90)
	at org.springframework.boot.SpringApplicationRunListeners.failed(SpringApplicationRunListeners.java:83)
	at org.springframework.boot.SpringApplication.handleRunFailure(SpringApplication.java:797)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:325)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.julong.oasystem.OasystemApplication.main(OasystemApplication.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
2020-07-05 23:25:34.340 INFO  --- [DiscoveryClient.java:929][restartedMain] - Completed shut down of DiscoveryClient
2020-07-05 23:25:34.341 INFO  --- [HikariDataSource.java:350][restartedMain] - HikariPool-1 - Shutdown initiated...
2020-07-05 23:25:34.363 INFO  --- [HikariDataSource.java:352][restartedMain] - HikariPool-1 - Shutdown completed.
2020-07-05 23:25:34.375 ERROR --- [SpringApplication.java:826][restartedMain] - Application run failed
java.lang.IllegalArgumentException: Cron expression must consist of 6 fields (found 20 in "[{"deptName":"财务部","name":"陈桂宽","mobile":"13712786199","avatar":"http://shp.qpic.cn/bizmp/SajntIicIvfCYhAHqXG2x0icxJiaxBpAWSkcraPkxJYviaqGLm1spAwXAw/","userId":"jl_cgk"}, {"deptName":"研发部","name":"陈向东","mobile":"13538370841","avatar":"http://wework.qpic.cn/bizmail/Fut53fPZQXRRM95NvyYsbpAfajvQ9IIdN8VLKXRn4icdOVuHPt2cJibg/","userId":"jl_cxd"}, {"deptName":"工程部","name":"邓将林","mobile":"15014869862","avatar":"http://shp.qpic.cn/bizmp/SajntIicIvfCYhAHqXG2x0icxJiaxBpAWSkakNBAj16CBe4y7rhicicfGFA/","userId":"jl_djl"}, {"deptName":"工程部","name":"呙登勇","mobile":"13650273037","avatar":"http://wework.qpic.cn/bizmail/PcI3scuib4iaMkb56n8hRLGFWlDu9gXbLC5V5hjAp2YW8hcHlYO4s3Ug/0","userId":"jl_gdy"}, {"deptName":"工程部","name":"黄加兴","mobile":"13277200660","avatar":"http://shp.qpic.cn/bizmp/SajntIicIvfDDnTqu1AMnFh9uTePw7pzA0xC1SjPZ0J4IqbNcE24oIw/","userId":"jl_hjx"}, {"deptName":"研发部","name":"黄朗坚","mobile":"18566953342","avatar":"http://wework.qpic.cn/bizmail/2hBDcxmh43tJmeQPjsO01bERyp2LQqOicHXvwOaiad66DLOBFbCBNOiaA/","userId":"jl_hlj"}, {"deptName":"研发部","name":"李景强","mobile":"18688616021","avatar":"http://wework.qpic.cn/bizmail/miau5Sygz6HqQNrbscJsaaULEiaEjNOXeibRQUSIjm2IrTVILwoWibKAhw/0","userId":"jl_ljq"}, {"deptName":"工程部","name":"雷朋","mobile":"13545152612","avatar":"http://wework.qpic.cn/bizmail/ESju0VoZqqjnSJFnXwr6UbVOiamuXTVuvYTtvsWYX87wzQCxiciceJiarQ/0","userId":"jl_lp"}, {"deptName":"研发部","name":"李攀","mobile":"13794862011","avatar":"http://wework.qpic.cn/bizmail/0dUP2zXn7DKIa2xtVGN1QnBDNve4Bf5REsyXkuKBKqiaSwy2cPBicPZQ/0","userId":"jl_lp2"}, {"deptName":"行政部","name":"栾文宪","mobile":"18688660906","avatar":"http://shp.qpic.cn/bizmp/SajntIicIvfDYTjcnn5q9XmeZsT46kg5ag8KUSjMdmdMfpUNkwQxfUw/","userId":"jl_lwx"}, {"deptName":"研发部","name":"李勇明","mobile":"13686080204","userId":"jl_lym"}, {"deptName":"研发部","name":"罗煜韬","mobile":"13537193472","avatar":"http://wework.qpic.cn/bizmail/lxESSHcSiakq3ia0IgyUntxlG8ywYRNG2cYJ0CUialfu2ehuLQh7AhxnA/0","userId":"jl_lyt"}, {"deptName":"行政部","name":"欧阳珺","mobile":"18688696122","avatar":"http://wework.qpic.cn/bizmail/vqHic3DBzzpBnaYOiaMI2o3icXtlyicDlPAIUfKbo9sSZC4pqhYzibWaboA/0","userId":"jl_oyj"}, {"deptName":"工程部","name":"覃华智","mobile":"18664835943","avatar":"http://wework.qpic.cn/bizmail/ibCjFVicQlZ8icEw0CKicE4UDOC571Jic7a0ib6Rm37o5gvWprSiaK98lE95Q/0","userId":"jl_qhz"}, {"deptName":"市场部","name":"师广跃","mobile":"13922936719","avatar":"http://shp.qpic.cn/bizmp/SajntIicIvfCYhAHqXG2x0icxJiaxBpAWSkevU2J7cYibhhHGmGJKMqOWg/","userId":"jl_sgy"}, {"deptName":"工程部","name":"韦楚龙","mobile":"18819112021","avatar":"http://wework.qpic.cn/bizmail/VicjmSkTqI4o0e16Xfej0MA4iaovnE1q7Z1wFibXwMXJIgjl0sH4OgxOg/0","userId":"jl_wcl"}, {"deptName":"工程部","name":"文祖理","mobile":"13538693743","avatar":"http://shp.qpic.cn/bizmp/SajntIicIvfCYhAHqXG2x0icxJiaxBpAWSk8rqB5lXBgOlwU2eeytnETw/","userId":"jl_wzl"}, {"deptName":"行政部","name":"谢伟东","mobile":"13620098187","avatar":"http://wework.qpic.cn/bizmail/ibkL8mvCA9qdn0ia7mUEG8jJDmStryXjCas6icykzicmHWjztbRoMh5zbQ/0","userId":"jl_xwd"}, {"deptName":"财务部","name":"徐婉霞","mobile":"13712375050","avatar":"http://shp.qpic.cn/bizmp/SajntIicIvfCYhAHqXG2x0icxJiaxBpAWSk8bqE15Gib6UHwdueiaePZt3g/","userId":"jl_xwx","email":"93246966@qq.com"}, {"deptName":"研发部","name":"周枫晴","mobile":"15024140379","avatar":"http://wework.qpic.cn/bizmail/zfVpkl8kFjGdfBAOicygXgKZzLe0g7y8s6XsR8dzEvT1SVATRSYYF7g/","userId":"jl_zfq"}]")
	at org.springframework.scheduling.support.CronSequenceGenerator.parse(CronSequenceGenerator.java:273)
	at org.springframework.scheduling.support.CronSequenceGenerator.<init>(CronSequenceGenerator.java:98)
	at org.springframework.scheduling.support.CronSequenceGenerator.<init>(CronSequenceGenerator.java:85)
	at org.springframework.scheduling.support.CronTrigger.<init>(CronTrigger.java:45)
	at com.julong.oasystem.config.CompleteScheduleConfig.lambda$configureTasks$1(CompleteScheduleConfig.java:44)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.scheduleVO(ReschedulingRunnable.java:75)
	at org.springframework.scheduling.concurrent.ConcurrentTaskScheduler.scheduleVO(ConcurrentTaskScheduler.java:182)
	at org.springframework.scheduling.config.ScheduledTaskRegistrar.scheduleTriggerTask(ScheduledTaskRegistrar.java:406)
	at org.springframework.scheduling.config.ScheduledTaskRegistrar.scheduleTasks(ScheduledTaskRegistrar.java:364)
	at org.springframework.scheduling.config.ScheduledTaskRegistrar.afterPropertiesSet(ScheduledTaskRegistrar.java:349)
	at org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor.finishRegistration(ScheduledAnnotationBeanPostProcessor.java:302)
	at org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor.onApplicationEvent(ScheduledAnnotationBeanPostProcessor.java:233)
	at org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor.onApplicationEvent(ScheduledAnnotationBeanPostProcessor.java:105)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:403)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:360)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:897)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.julong.oasystem.OasystemApplication.main(OasystemApplication.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
2020-07-05 23:27:54.460 INFO  --- [SpringApplication.java:651][restartedMain] - No active profile set, falling back to default profiles: default
2020-07-05 23:27:58.800 WARN  --- [URLConfigurationSource.java:121][restartedMain] - No URLs will be polled as dynamic configuration sources.
2020-07-05 23:27:58.801 INFO  --- [URLConfigurationSource.java:122][restartedMain] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-05 23:27:58.806 WARN  --- [URLConfigurationSource.java:121][restartedMain] - No URLs will be polled as dynamic configuration sources.
2020-07-05 23:27:58.806 INFO  --- [URLConfigurationSource.java:122][restartedMain] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-05 23:28:01.145 INFO  --- [DiscoveryClient.java:365][restartedMain] - Initializing Eureka in region us-east-1
2020-07-05 23:28:01.230 INFO  --- [DiscoveryJerseyProvider.java:70][restartedMain] - Using JSON encoding codec LegacyJacksonJson
2020-07-05 23:28:01.230 INFO  --- [DiscoveryJerseyProvider.java:71][restartedMain] - Using JSON decoding codec LegacyJacksonJson
2020-07-05 23:28:01.338 INFO  --- [DiscoveryJerseyProvider.java:80][restartedMain] - Using XML encoding codec XStreamXml
2020-07-05 23:28:01.339 INFO  --- [DiscoveryJerseyProvider.java:81][restartedMain] - Using XML decoding codec XStreamXml
2020-07-05 23:28:01.683 INFO  --- [ConfigClusterResolver.java:43][restartedMain] - Resolving eureka endpoints via configuration
2020-07-05 23:28:01.976 INFO  --- [DiscoveryClient.java:976][restartedMain] - Disable delta property : false
2020-07-05 23:28:01.977 INFO  --- [DiscoveryClient.java:977][restartedMain] - Single vip registry refresh property : null
2020-07-05 23:28:01.977 INFO  --- [DiscoveryClient.java:978][restartedMain] - Force full registry fetch : false
2020-07-05 23:28:01.977 INFO  --- [DiscoveryClient.java:979][restartedMain] - Application is null : false
2020-07-05 23:28:01.978 INFO  --- [DiscoveryClient.java:980][restartedMain] - Registered Applications size is zero : true
2020-07-05 23:28:01.978 INFO  --- [DiscoveryClient.java:982][restartedMain] - Application version is -1: true
2020-07-05 23:28:01.978 INFO  --- [DiscoveryClient.java:1065][restartedMain] - Getting all instance registry info from the eureka server
2020-07-05 23:28:02.185 INFO  --- [DiscoveryClient.java:1074][restartedMain] - The response status is 200
2020-07-05 23:28:02.189 INFO  --- [DiscoveryClient.java:1288][restartedMain] - Starting heartbeat executor: renew interval is: 30
2020-07-05 23:28:02.194 INFO  --- [InstanceInfoReplicator.java:60][restartedMain] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-07-05 23:28:02.201 INFO  --- [DiscoveryClient.java:465][restartedMain] - Discovery Client initialized at timestamp 1593962882199 with initial instances count: 1
2020-07-05 23:28:02.216 INFO  --- [DiscoveryClient.java:1323][restartedMain] - Saw local status change event StatusChangeEvent [timestamp=1593962882216, current=UP, previous=STARTING]
2020-07-05 23:28:02.219 INFO  --- [DiscoveryClient.java:844][DiscoveryClient-InstanceInfoReplicator-0] - DiscoveryClient_HOUTAIGUANLI/192.168.0.102:houtaiguanli:9090: registering service...
2020-07-05 23:28:02.302 INFO  --- [DiscoveryClient.java:853][DiscoveryClient-InstanceInfoReplicator-0] - DiscoveryClient_HOUTAIGUANLI/192.168.0.102:houtaiguanli:9090 - registration status: 204
2020-07-05 23:28:02.342 INFO  --- [HikariDataSource.java:110][restartedMain] - HikariPool-1 - Starting...
2020-07-05 23:28:02.344 WARN  --- [DriverDataSource.java:70][restartedMain] - Registered driver with driverClassName=oracle.jdbc.driver.OracleDriver was not found, trying direct instantiation.
2020-07-05 23:28:02.701 INFO  --- [HikariDataSource.java:123][restartedMain] - HikariPool-1 - Start completed.
2020-07-05 23:28:03.313 WARN  --- [DiscoveryClient.java:1321][restartedMain] - Saw local status change event StatusChangeEvent [timestamp=1593962883313, current=DOWN, previous=UP]
2020-07-05 23:28:03.314 INFO  --- [DiscoveryClient.java:844][DiscoveryClient-InstanceInfoReplicator-0] - DiscoveryClient_HOUTAIGUANLI/192.168.0.102:houtaiguanli:9090: registering service...
2020-07-05 23:28:03.321 INFO  --- [DiscoveryClient.java:853][DiscoveryClient-InstanceInfoReplicator-0] - DiscoveryClient_HOUTAIGUANLI/192.168.0.102:houtaiguanli:9090 - registration status: 204
2020-07-05 23:28:03.341 WARN  --- [URLConfigurationSource.java:121][restartedMain] - No URLs will be polled as dynamic configuration sources.
2020-07-05 23:28:03.341 INFO  --- [URLConfigurationSource.java:122][restartedMain] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-07-05 23:28:03.346 INFO  --- [DiscoveryClient.java:906][restartedMain] - Shutting down DiscoveryClient ...
2020-07-05 23:28:06.347 INFO  --- [DiscoveryClient.java:940][restartedMain] - Unregistering ...
2020-07-05 23:28:06.377 INFO  --- [DiscoveryClient.java:942][restartedMain] - DiscoveryClient_HOUTAIGUANLI/192.168.0.102:houtaiguanli:9090 - deregister  status: 200
2020-07-05 23:28:06.397 INFO  --- [DiscoveryClient.java:929][restartedMain] - Completed shut down of DiscoveryClient
2020-07-05 23:28:06.398 INFO  --- [HikariDataSource.java:350][restartedMain] - HikariPool-1 - Shutdown initiated...
2020-07-05 23:28:06.421 INFO  --- [HikariDataSource.java:352][restartedMain] - HikariPool-1 - Shutdown completed.
2020-07-05 23:28:06.433 ERROR --- [SpringApplication.java:826][restartedMain] - Application run failed
java.lang.IllegalArgumentException: Cron expression must consist of 6 fields (found 20 in "[{"deptName":"财务部","name":"陈桂宽","mobile":"13712786199","avatar":"http://shp.qpic.cn/bizmp/SajntIicIvfCYhAHqXG2x0icxJiaxBpAWSkcraPkxJYviaqGLm1spAwXAw/","userId":"jl_cgk"}, {"deptName":"研发部","name":"陈向东","mobile":"13538370841","avatar":"http://wework.qpic.cn/bizmail/Fut53fPZQXRRM95NvyYsbpAfajvQ9IIdN8VLKXRn4icdOVuHPt2cJibg/","userId":"jl_cxd"}, {"deptName":"工程部","name":"邓将林","mobile":"15014869862","avatar":"http://shp.qpic.cn/bizmp/SajntIicIvfCYhAHqXG2x0icxJiaxBpAWSkakNBAj16CBe4y7rhicicfGFA/","userId":"jl_djl"}, {"deptName":"工程部","name":"呙登勇","mobile":"13650273037","avatar":"http://wework.qpic.cn/bizmail/PcI3scuib4iaMkb56n8hRLGFWlDu9gXbLC5V5hjAp2YW8hcHlYO4s3Ug/0","userId":"jl_gdy"}, {"deptName":"工程部","name":"黄加兴","mobile":"13277200660","avatar":"http://shp.qpic.cn/bizmp/SajntIicIvfDDnTqu1AMnFh9uTePw7pzA0xC1SjPZ0J4IqbNcE24oIw/","userId":"jl_hjx"}, {"deptName":"研发部","name":"黄朗坚","mobile":"18566953342","avatar":"http://wework.qpic.cn/bizmail/2hBDcxmh43tJmeQPjsO01bERyp2LQqOicHXvwOaiad66DLOBFbCBNOiaA/","userId":"jl_hlj"}, {"deptName":"研发部","name":"李景强","mobile":"18688616021","avatar":"http://wework.qpic.cn/bizmail/miau5Sygz6HqQNrbscJsaaULEiaEjNOXeibRQUSIjm2IrTVILwoWibKAhw/0","userId":"jl_ljq"}, {"deptName":"工程部","name":"雷朋","mobile":"13545152612","avatar":"http://wework.qpic.cn/bizmail/ESju0VoZqqjnSJFnXwr6UbVOiamuXTVuvYTtvsWYX87wzQCxiciceJiarQ/0","userId":"jl_lp"}, {"deptName":"研发部","name":"李攀","mobile":"13794862011","avatar":"http://wework.qpic.cn/bizmail/0dUP2zXn7DKIa2xtVGN1QnBDNve4Bf5REsyXkuKBKqiaSwy2cPBicPZQ/0","userId":"jl_lp2"}, {"deptName":"行政部","name":"栾文宪","mobile":"18688660906","avatar":"http://shp.qpic.cn/bizmp/SajntIicIvfDYTjcnn5q9XmeZsT46kg5ag8KUSjMdmdMfpUNkwQxfUw/","userId":"jl_lwx"}, {"deptName":"研发部","name":"李勇明","mobile":"13686080204","userId":"jl_lym"}, {"deptName":"研发部","name":"罗煜韬","mobile":"13537193472","avatar":"http://wework.qpic.cn/bizmail/lxESSHcSiakq3ia0IgyUntxlG8ywYRNG2cYJ0CUialfu2ehuLQh7AhxnA/0","userId":"jl_lyt"}, {"deptName":"行政部","name":"欧阳珺","mobile":"18688696122","avatar":"http://wework.qpic.cn/bizmail/vqHic3DBzzpBnaYOiaMI2o3icXtlyicDlPAIUfKbo9sSZC4pqhYzibWaboA/0","userId":"jl_oyj"}, {"deptName":"工程部","name":"覃华智","mobile":"18664835943","avatar":"http://wework.qpic.cn/bizmail/ibCjFVicQlZ8icEw0CKicE4UDOC571Jic7a0ib6Rm37o5gvWprSiaK98lE95Q/0","userId":"jl_qhz"}, {"deptName":"市场部","name":"师广跃","mobile":"13922936719","avatar":"http://shp.qpic.cn/bizmp/SajntIicIvfCYhAHqXG2x0icxJiaxBpAWSkevU2J7cYibhhHGmGJKMqOWg/","userId":"jl_sgy"}, {"deptName":"工程部","name":"韦楚龙","mobile":"18819112021","avatar":"http://wework.qpic.cn/bizmail/VicjmSkTqI4o0e16Xfej0MA4iaovnE1q7Z1wFibXwMXJIgjl0sH4OgxOg/0","userId":"jl_wcl"}, {"deptName":"工程部","name":"文祖理","mobile":"13538693743","avatar":"http://shp.qpic.cn/bizmp/SajntIicIvfCYhAHqXG2x0icxJiaxBpAWSk8rqB5lXBgOlwU2eeytnETw/","userId":"jl_wzl"}, {"deptName":"行政部","name":"谢伟东","mobile":"13620098187","avatar":"http://wework.qpic.cn/bizmail/ibkL8mvCA9qdn0ia7mUEG8jJDmStryXjCas6icykzicmHWjztbRoMh5zbQ/0","userId":"jl_xwd"}, {"deptName":"财务部","name":"徐婉霞","mobile":"13712375050","avatar":"http://shp.qpic.cn/bizmp/SajntIicIvfCYhAHqXG2x0icxJiaxBpAWSk8bqE15Gib6UHwdueiaePZt3g/","userId":"jl_xwx","email":"93246966@qq.com"}, {"deptName":"研发部","name":"周枫晴","mobile":"15024140379","avatar":"http://wework.qpic.cn/bizmail/zfVpkl8kFjGdfBAOicygXgKZzLe0g7y8s6XsR8dzEvT1SVATRSYYF7g/","userId":"jl_zfq"}]")
	at org.springframework.scheduling.support.CronSequenceGenerator.parse(CronSequenceGenerator.java:273)
	at org.springframework.scheduling.support.CronSequenceGenerator.<init>(CronSequenceGenerator.java:98)
	at org.springframework.scheduling.support.CronSequenceGenerator.<init>(CronSequenceGenerator.java:85)
	at org.springframework.scheduling.support.CronTrigger.<init>(CronTrigger.java:45)
	at com.julong.oasystem.config.CompleteScheduleConfig.lambda$configureTasks$1(CompleteScheduleConfig.java:44)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.scheduleVO(ReschedulingRunnable.java:75)
	at org.springframework.scheduling.concurrent.ConcurrentTaskScheduler.scheduleVO(ConcurrentTaskScheduler.java:182)
	at org.springframework.scheduling.config.ScheduledTaskRegistrar.scheduleTriggerTask(ScheduledTaskRegistrar.java:406)
	at org.springframework.scheduling.config.ScheduledTaskRegistrar.scheduleTasks(ScheduledTaskRegistrar.java:364)
	at org.springframework.scheduling.config.ScheduledTaskRegistrar.afterPropertiesSet(ScheduledTaskRegistrar.java:349)
	at org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor.finishRegistration(ScheduledAnnotationBeanPostProcessor.java:302)
	at org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor.onApplicationEvent(ScheduledAnnotationBeanPostProcessor.java:233)
	at org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor.onApplicationEvent(ScheduledAnnotationBeanPostProcessor.java:105)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:403)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:360)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:897)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.julong.oasystem.OasystemApplication.main(OasystemApplication.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
